version: "3"
services:
  # Serviço do banco de dados
  banco_engenharia_db:
    container_name: banco_engenharia_db
    image: postgres:latest
    environment:
      POSTGRES_DB: banco_engenharia_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      PGDATA: /data/postgres
    networks:
      - orquestrador
    ports:
      - 5433:5432
  banco_economia_db:
    container_name: banco_economia_db
    image: postgres:latest
    environment:
      POSTGRES_DB: banco_economia_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      PGDATA: /data/postgres
    networks:
      - orquestrador
    ports:
      - 5434:5432
  banco_direito_db:
    container_name: banco_direito_db
    image: postgres:latest
    environment:
      POSTGRES_DB: banco_direito_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      PGDATA: /data/postgres
    networks:
      - orquestrador
    ports:
      - 5435:5432

  kafka:
    container_name: kafka
    image: obsidiandynamics/kafka
    restart: no
    ports:
      - 2181:2181
      - 9092:9092
    networks:
      - orquestrador
    environment:
      KAFKA_LISTENERS: INTERNAL://:29092,EXTERNAL://:9092
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka:29092,EXTERNAL://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_ZOOKEEPER_SESSION_TIMEOUT: "6000"
      KAFKA_RESTART_ATTEMPTS: "10"
      KAFKA_RESTART_DELAY: "5"
      ZOOKEEPER_AUTOPURGE_PURGE_INTERVAL: "0"
    volumes:
      - ./data/kafka/data:/var/lib/kafka/data

  # Serviço Redpanda Console
  redpanda-console:
    container_name: redpanda
    image: docker.redpanda.com/vectorized/console:latest
    restart: on-failure
    entrypoint: /bin/sh
    command: -c "echo \"$$CONSOLE_CONFIG_FILE\" > /tmp/config.yml; /app/console"
    ports:
      - 8081:8080
    networks:
      - orquestrador
    environment:
      CONFIG_FILEPATH: /tmp/config.yml
      CONSOLE_CONFIG_FILE: |
        kafka:
          brokers: ["kafka:29092"]
    depends_on:
      - kafka

  # Serviço Conecta
  conecta:
    build: 
      context: ./conecta-service
      dockerfile: Dockerfile
    container_name: conecta
    depends_on:
      - kafka
    networks:
      - orquestrador
    environment:
      - KAFKA_BROKER=kafka:29092
    ports:
      - 8080:8080

  # Serviço Banco-Engenharia
  banco-engenharia:
    build: 
      context: ./banco-engenharia-service
      dockerfile: Dockerfile
    container_name: banco-engenharia
    depends_on:
      - banco_engenharia_db
      - kafka
    networks:
      - orquestrador
    environment:
      - KAFKA_BROKER=kafka:29092
      - DB_HOST=banco_engenharia_db
      - DB_PORT=5432
      - DB_NAME=banco_engenharia_db
      - DB_USER=postgres
      - DB_PASSWORD=postgres
    ports:
      - 8092:809

